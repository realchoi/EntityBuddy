<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="DBuddy.AppUi.Views.EntityGenerateView"
             xmlns:vm="using:DBuddy.AppUi.ViewModels"
             xmlns:controls="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             x:DataType="vm:EntityGenerateViewModel">
    <UserControl.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:EntityGenerateViewModel />
    </UserControl.DataContext>

    <StackPanel Margin="20">
        <Grid ShowGridLines="False" Margin="5" ColumnDefinitions="Auto, *, Auto, *"
              RowDefinitions="Auto, Auto, Auto, Auto, Auto, Auto">
            <Label Grid.Row="0" Grid.Column="0" Margin="10">编程语言：</Label>
            <ComboBox Grid.Row="0" Grid.Column="1" Margin="5" x:Name="ProgrammingLangComboBox"
                      ItemsSource="{Binding ProgrammingLanguages}" SelectedIndex="0"
                      SelectedItem="{Binding SelectedProgrammingLanguage}"
                      MinWidth="240" MaxDropDownHeight="300">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Text}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label Grid.Row="0" Grid.Column="2" Margin="10">数据库类型：</Label>
            <ComboBox Grid.Row="0" Grid.Column="3" Margin=" 5" x:Name="DatabaseTypeComboBox"
                      ItemsSource="{Binding DatabaseTypes}" SelectedIndex="0"
                      SelectedItem="{Binding SelectedDatabaseType}"
                      MinWidth="240" MaxDropDownHeight="300">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Text}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Label Grid.Row="1" Grid.Column="0" Margin="10">连接字符串：</Label>
            <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin=" 5 " x:Name="ConnectionStringTextBox"
                     Watermark="必填（格式：Server=ip_address;Port=5432;UserId=xxx;Password=xxx;Database=xxx;）"
                     Text="{Binding ConnectionString}" />
            <Button Grid.Row="1" Grid.Column="3" Margin="5" Background="Gainsboro" FontWeight="Bold"
                    Command="{Binding TestDbConnectCommand}">
                测试连接
            </Button>
            <Label Grid.Row="2" Grid.Column="0" Margin="10">架构名：</Label>
            <TextBox Grid.Row="2" Grid.Column="1" Margin=" 5" x:Name="SchemaNameTextBox"
                     Watermark="如果为空，则默认为 public"
                     Text="{Binding SchemaName}" />
            <Label Grid.Row="2" Grid.Column="2" Margin="10">表名：</Label>
            <TextBox Grid.Row="2" Grid.Column="3" Margin="5" x:Name="TableNameTextBox"
                     Watermark="必填"
                     Text="{Binding TableName}" />
            <Label Grid.Row="3" Grid.Column="0" Margin="10">文件保存路径：</Label>
            <TextBox Grid.Row="3" Grid.Column="1" Margin=" 5" x:Name="SavePathTextBox"
                     Watermark="必填，如果为空，则默认为桌面（格式：C:\Users\XXX\Desktop）" Text="{Binding SaveClassFilePath}" />
            <Label Grid.Row="3" Grid.Column="2" Margin="10" Width="40">或者</Label>
            <Button Grid.Row="3" Grid.Column="3" Margin=" 5" Background="Gainsboro" FontWeight="Bold"
                    Command="{Binding SelectSaveClassFilePathCommand}">
                选择路径
            </Button>
            <Button Grid.Row="4" Grid.Column="0" Margin="10" Background="Coral" FontWeight="Bold"
                    Command="{Binding GenerateClassFileCommand}">
                生成 Class 文件
            </Button>
            <Button Grid.Row="4" Grid.Column="1" Margin="10" FontWeight="Bold"
                    Command="{Binding CloseDialogCommand}">
                关闭
            </Button>
        </Grid>
    </StackPanel>
</UserControl>